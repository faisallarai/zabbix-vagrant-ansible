---
- name: Download zabbix-release_4.2-1+bionic_all.deb
  get_url:
    url: https://repo.zabbix.com/zabbix/4.2/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.2-1+bionic_all.deb
    dest: /tmp/zabbix-release_4.2-1+bionic_all.deb

- name: Install a .deb package from the internet.
  apt:
    deb: https://repo.zabbix.com/zabbix/4.2/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.2-1+bionic_all.deb

- name: Install aptitude using apt
  apt:
    name: aptitude
    state: present
    update_cache: yes
    force_apt_get: yes

- name: Copy local hosts file to etc folder
  become: yes
  copy: src=hosts dest=/etc/

- name: Add the user 'ubuntu' with a bash shell, appending the group 'vagrant' to the user's groups
  user:
    name: ubuntu
    shell: /bin/bash
    groups: vagrant
    append: yes

- name: Copy files in .ssh folder
  become: yes
  copy:
    src: /home/vagrant/.ssh/
    dest: /home/ubuntu/
    remote_src: yes

- name: Add permissions to folder ubuntu
  file:
    path: /home/ubuntu
    owner: ubuntu
    group: ubuntu

- name: Update cache
  apt:
    name: aptitude
    state: present
    update_cache: yes
    force_apt_get: yes

- name: Install required system packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop: ['python-minimal', 'python-apt', 'python-setuptools', 'python-pip', 'zabbix-server-mysql', 'zabbix-frontend-php', 'zabbix-agent', 'gzip']

- name: Make sure pymysql is present
  become: yes
  pip:
    name: pymysql
    state: present

- name: create /root/.my.cnf (from template) with password credentials
  become: yes
  template:
    src: "{{ role_path }}/templates/.my.cnf"
    dest: /root/.my.cnf
    owner: root
    mode: 0755

- name: Dump zabbix database to zabbix-timestamp.sql
  mysql_db:
    state: dump
    name: "{{ db_name }}"
    target: /tmp/{{ db_name }}-{{ ansible_date_time.date }}.sql
    login_unix_socket: /var/run/mysqld/mysqld.sock
  ignore_errors: true

- name: Drop zabbix database
  become: yes
  mysql_db:
    name: '{{ db_name }}'
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  ignore_errors: true

- name: Create database
  become: yes
  mysql_db:
    name: '{{ db_name }}'
    state: present
    collation: utf8_bin
    encoding: utf8
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: db_created

- name: Show db created result
  debug:
    var: db_created

- name: "Create user for the database {{ db_user }} "
  become: yes
  mysql_user:
    host: localhost
    check_implicit_admin: yes
    name: zabbix
    password: "{{ db_pass }}"
    encrypted: no
    priv: "{{ db_name }}.*:ALL,GRANT"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Retrieve mysql binary archive.
  become: yes
  shell: zcat /usr/share/doc/zabbix-server-mysql/create.sql.gz > /tmp/create.sql
  changed_when: false

- name: Restore database
  mysql_db:
    name: '{{ db_name }}'
    state: import
    target: /tmp/create.sql
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: db_imported
  ignore_errors: true

- name: Copy zabbix server sql file
  become: no
  copy: 
    src: files/zabbix-server.sql 
    dest: "/tmp/zabbix-server.sql"

- name: Restore backup database
  mysql_db:
    name: '{{ db_name }}'
    state: import
    target: /tmp/zabbix-server.sql
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: zabbix_server_imported
  ignore_errors: true

- name: Show db import result
  debug:
    var: db_imported.msg

- name: Replace apache config file
  template:
    src: templates/zabbix.j2
    dest: /etc/apache2/conf-enabled/zabbix.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: yes

- name: Replace zabbix server config file
  template:
    src: templates/zabbix_server.j2
    dest: /etc/zabbix/zabbix_server.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: yes

- name: Replace zabbix agent config file
  template:
    src: templates/zabbix_agentd.j2
    dest: /etc/zabbix/zabbix_agentd.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: yes

- name: restart service zabbix server and agent on
  systemd:
    state: restarted
    daemon_reload: yes
    name: "{{ item }}"
    enabled: yes
    masked: no
  loop: ['zabbix-server', 'zabbix-agent', 'apache2']

- name: Enable zabbix server
  become: yes
  command: update-rc.d zabbix-server enable
  changed_when: false
